<?xml version="1.0" encoding="UTF-8"?>
<!-- Foundation -->
<includes>
	<include name="View_59_BannerPlex">
		<control type="group">
			<include>Animation.Common</include>
			<visible>Control.IsVisible(59)</visible>
			<visible>!Window.IsVisible(DialogVideoInfo.xml) + !Window.IsVisible(DialogAlbumInfo.xml)</visible>
			<control type="panel" id="59">
				<visible>Container.Content(movies) | Container.Content(tvshows)</visible>
				<top>200</top>
				<right>70</right>
				<left>70</left>
				<height>666</height>
				<onleft condition="!Skin.HasSetting(global.kioskmode)">9000</onleft>
				<onright>60</onright>
				<onup>59</onup>
				<ondown>59</ondown>
				<preloaditems>2</preloaditems>
				<pagecontrol>60</pagecontrol>
				<viewtype label="31741">list</viewtype>
				<!--<visible>StringCompare(Window(Home).Property(SkinHelper.ForcedView),59) | IsEmpty(Window(Home).Property(SkinHelper.ForcedView))</visible>-->
				<scrolltime tween="quadratic">400</scrolltime>
				<itemlayout height="133" width="593">
					<control type="image">
						<left>0</left>
						<top>6</top>
						<right>0</right>
						<bottom>0</bottom>
						<texture border="10">common/nofocus-shadow10.png</texture>
					</control>
					<control type="image">
						<left>10</left>
						<top>16</top>
						<right>10</right>
						<bottom>10</bottom>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<texture diffuse="diffuse/wall-fanart.png" background="true">$VAR[BannerImage]</texture>
					</control>
                    <!--<control type="label">
                        <centerright>32</centerright>
						<centertop>35</centertop>
                        <width>32</width>
                        <height>32</height>
                        <font>symbolview</font>
                        <label>$VAR[PercentWatchedLabel]</label>
                        <textcolor>$VAR[ColourHighlight2]</textcolor>
                        <visible>!stringcompare(ListItem.Label,..)</visible>
                    </control>-->
					<control type="image">
						<centerright>32</centerright>
						<centertop>38</centertop>
						<width>32</width>
						<height>32</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture colordiffuse="$VAR[PercentColourHighlight]">$VAR[PosterPercentWatchedBacking]</texture>
						<visible>!stringcompare(ListItem.Label,..)</visible>
						<visible>!Skin.HasSetting(furniture.alternateindicators)</visible>
					</control>
					<control type="image">
						<centerright>32</centerright>
						<centertop>38</centertop>
						<width>32</width>
						<height>32</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture>$VAR[PosterPercentWatched]</texture>
						<visible>!stringcompare(ListItem.Label,..)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[PlayingColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[WatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[ResumeColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[NewColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
					</control>					
				</itemlayout>
				<focusedlayout height="133" width="593">
					<control type="button">
						<texturefocus>-</texturefocus>
						<texturenofocus>-</texturenofocus>
						<onfocus condition="Container.Content(movies)">ClearProperty(TVShowID,home)</onfocus>
						<onfocus condition="Container.Content(tvshows)">SetProperty(TVShowID,$INFO[ListItem.DBID],home)</onfocus>
					</control>
					<control type="image">
						<left>0</left>
						<top>6</top>
						<right>0</right>
						<bottom>0</bottom>
						<texture border="10">common/nofocus-shadow10.png</texture>
					</control>
					<control type="image">
						<left>10</left>
						<top>16</top>
						<right>10</right>
						<bottom>10</bottom>
						<aspectratio scalediffuse="false">scale</aspectratio>
						<texture diffuse="diffuse/wall-fanart.png" background="true">$VAR[BannerImage]</texture>
					</control>
                    <!--<control type="label">
                        <centerright>32</centerright>
						<centertop>35</centertop>
                        <width>32</width>
                        <height>32</height>
                        <font>symbolview</font>
                        <label>$VAR[PercentWatchedLabel]</label>
                        <textcolor>$VAR[ColourHighlight2]</textcolor>
                        <visible>!stringcompare(ListItem.Label,..)</visible>
                    </control>-->
					<control type="image">
						<centerright>32</centerright>
						<centertop>38</centertop>
						<width>32</width>
						<height>32</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture colordiffuse="$VAR[PercentColourHighlight]">$VAR[PosterPercentWatchedBacking]</texture>
						<visible>!stringcompare(ListItem.Label,..)</visible>
						<visible>!Skin.HasSetting(furniture.alternateindicators)</visible>
					</control>
					<control type="image">
						<centerright>32</centerright>
						<centertop>38</centertop>
						<width>32</width>
						<height>32</height>
						<aspectratio aligny="top">keep</aspectratio>
						<texture>$VAR[PosterPercentWatched]</texture>
						<visible>!stringcompare(ListItem.Label,..)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[UnwatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayUnwatched.png) + Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[PlayingColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsPlaying</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[WatchedColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + stringcompare(ListItem.Overlay,OverlayWatched.png) + !Skin.HasSetting(furniture.unwatched)</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[ResumeColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + ListItem.IsResumable</visible>
					</control>
					<control type="label">
						<centerright>32</centerright>
						<centertop>35</centertop>
						<width>32</width>
						<height>32</height>
						<font>symbolview</font>
						<label>$VAR[PercentWatchedLabel]</label>
						<textcolor>$VAR[NewColourHighlight]</textcolor>
						<visible>!stringcompare(ListItem.Label,..) + [SubString(ListItem.Overlay,OverlayUnwatched.png) + [[Container.Content(movies) + [StringCompare(Window(Home).Property(LatestMovie.1.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.2.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.3.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.4.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.5.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.6.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.7.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.8.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.9.Title),ListItem.Label) | StringCompare(Window(Home).Property(LatestMovie.10.Title),ListItem.Label)]] | [[Container.Content(tvshows)] + [StringCompare(Window(Home).Property(LatestEpisode.1.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.2.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.3.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.4.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.5.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.6.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.7.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.8.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.9.ShowTitle),ListItem.TvShowTitle) | StringCompare(Window(Home).Property(LatestEpisode.10.ShowTitle),ListItem.TvShowTitle)]] | [Container.Content(episodes) + [StringCompare(Window(Home).Property(LatestEpisode.1.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.2.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.3.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.4.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.5.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.6.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.7.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.8.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.9.EpisodeTitle),ListItem.Title) | StringCompare(Window(Home).Property(LatestEpisode.10.EpisodeTitle),ListItem.Title)]]]]</visible>
					</control>					
					<control type="image">
						<left>3</left>
						<top>9</top>
						<right>3</right>
						<bottom>3</bottom>
            			<texture colordiffuse="$VAR[ViewsSelectHighlight]" border="20">common/selectbox.png</texture><!--Changed-->
						<animation type="Focus">
							<effect type="zoom" start="90" end="100" time="150" tween="sine" easing="inout" center="auto" />
							<effect type="fade" start="0" end="100" time="150" tween="sine" easing="in" />
						</animation>
						<animation type="Unfocus">
							<effect type="zoom" start="100" end="90" time="150" tween="sine" easing="inout" center="auto" />
							<effect type="fade" start="100" end="0" time="150" tween="sine" easing="out" />
						</animation>
					</control>
				</focusedlayout>
			</control>
			<include>Furniture_Scrollbar</include>
		</control>
	</include>
</includes>